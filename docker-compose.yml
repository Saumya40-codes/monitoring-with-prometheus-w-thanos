version: '3.8'

networks:
  thanos:
    name: thanos

services:
  prometheus-0-apsouth1:
    image: prom/prometheus:latest
    container_name: prometheus-0-apsouth1
    user: root
    networks:
      - thanos
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus01.yml:/etc/prometheus/prometheus.yml
      - ./configs/recording-rule.yml:/etc/prometheus/recording-rule.yml
      - ./data/prom1:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=10d
      - --storage.tsdb.max-block-duration=2h
      - --storage.tsdb.min-block-duration=2h
      - --web.enable-lifecycle
      - --web.enable-admin-api 
      - --enable-feature=native-histograms
      - --enable-feature=promql-experimental-functions
    depends_on:
      - prometheus-1-apsouth1
      
  prometheus-1-apsouth1:
    image: prom/prometheus:latest
    container_name: prometheus-1-apsouth1
    user: root
    networks:
      - thanos
    ports:
      - "9091:9091"
    volumes:
      - ./configs/prometheus02.yml:/etc/prometheus/prometheus.yml
      - ./data/prom10:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=10d
      - --storage.tsdb.max-block-duration=2h
      - --storage.tsdb.min-block-duration=2h
      - --web.listen-address=0.0.0.0:9091
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.enable-admin-api
      - --enable-feature=native-histograms
      - --enable-feature=promql-experimental-functions

  prometheus-0-apsouth2:
    image: prom/prometheus:latest
    container_name: prometheus-0-apsouth2
    user: root
    networks:
      - thanos
    ports:
      - "9092:9092"
    volumes:
      - ./configs/prometheus1.yml:/etc/prometheus/prometheus.yml
      - ./data/prom2:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.listen-address=0.0.0.0:9092
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.enable-admin-api
      - --enable-feature=native-histograms
      - --enable-feature=promql-experimental-functions

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    networks:
      - thanos
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411

  sidecar-0:
    image: thanos:latest
    container_name: sidecar-0
    user: root
    networks:
      - thanos
    ports:
      - "19091:19091"
    volumes:
      - ./configs/prometheus01.yml:/etc/prometheus/prometheus.yml
      - ./configs/recording-rule.yml:/etc/prometheus/recording-rule.yml
      - ./data/prom10:/prometheus
      - ./configs/bucket_storage.yml:/etc/thanos/minio-bucket.yaml
      - ./configs/jaeger.yml:/etc/tracing/jaeger.yaml
    command:
      - sidecar
      - --http-address=0.0.0.0:19091
      - --grpc-address=0.0.0.0:19191
      - --reloader.config-file=/etc/prometheus/prometheus.yml
      - --objstore.config-file=/etc/thanos/minio-bucket.yaml
      - --shipper.upload-compacted
      - --tsdb.path=/prometheus
      - --prometheus.url=http://prometheus-0-apsouth1:9090
      - --tracing.config-file=/etc/tracing/jaeger.yaml
    depends_on:
      - prometheus-0-apsouth1

  sidecar-1:
    image: thanos:latest
    container_name: sidecar-1
    user: root
    networks:
      - thanos
    ports:
      - "19092:19092"
    volumes:
      - ./configs/prometheus02.yml:/etc/prometheus/prometheus.yml
      - ./data/prom1:/prometheus
      - ./configs/jaeger.yml:/etc/tracing/jaeger.yaml
    command:
      - sidecar
      - --http-address=0.0.0.0:19092
      - --grpc-address=0.0.0.0:19192
      - --reloader.config-file=/etc/prometheus/prometheus.yml
      - --prometheus.url=http://prometheus-1-apsouth1:9091
      - --tracing.config-file=/etc/tracing/jaeger.yaml
    depends_on:
      - prometheus-1-apsouth1

  sidecar-2:
    image: thanos:latest
    container_name: sidecar-2
    user: root
    networks:
      - thanos
    ports:
      - "19090:19090"
    volumes:
      - ./configs/prometheus1.yml:/etc/prometheus/prometheus.yml
      - ./configs/jaeger.yml:/etc/tracing/jaeger.yaml  
    command:
      - sidecar
      - --http-address=0.0.0.0:19090
      - --grpc-address=0.0.0.0:19190
      - --reloader.config-file=/etc/prometheus/prometheus.yml
      - --prometheus.url=http://prometheus-0-apsouth2:9092
      - --tracing.config-file=/etc/tracing/jaeger.yaml
    depends_on:
      - prometheus-0-apsouth2

  querier-1:
    image: thanos:latest
    container_name: querier-1
    networks:
      - thanos
    ports:
      - "29091:29091"
      - "29093:29093"
    volumes:
      - ./data/prom10:/prometheus
      - ./configs/jaeger.yml:/etc/tracing/jaeger.yaml
    command:
      - query
      - --http-address=0.0.0.0:29091
      - --grpc-address=0.0.0.0:29093
      - --query.replica-label=replica
      - --endpoint=store:19194
      - --endpoint=sidecar-2:19190
      - --endpoint=sidecar-0:19191
      - --tracing.config-file=/etc/tracing/jaeger.yaml 
      - --enable-feature=promql-experimental-functions
    depends_on:
      - sidecar-0
      - sidecar-2
      - store-gateway

  querier-2:
    image: thanos:latest
    container_name: querier-2
    networks:
      - thanos
    ports:
      - "29092:29092"
      - "29094:29094"
    volumes:
      - ./data/prom10:/prometheus
      - ./configs/jaeger.yml:/etc/tracing/jaeger.yaml
    command:
      - query
      - --http-address=0.0.0.0:29092
      - --grpc-address=0.0.0.0:29094
      - --query.replica-label=replica
      - --endpoint=sidecar-1:19192
      - --endpoint=thanos-receive:10907
      - --tracing.config-file=/etc/tracing/jaeger.yaml
      - --enable-feature=promql-experimental-functions
    depends_on:
      - sidecar-1

  querier-main:
    image: thanos:latest
    container_name: querier-main
    networks:
      - thanos
    ports:
      - "29090:29090"
    volumes:
      - ./configs/jaeger.yml:/etc/tracing/jaeger.yaml
    command:
      - query
      - --http-address=0.0.0.0:29090
      - --query.replica-label=replica
      - --endpoint=querier-1:29093
      - --endpoint=querier-2:29094
      - --tracing.config-file=/etc/tracing/jaeger.yaml
      - --query.mode=distributed
      - --enable-feature=promql-experimental-functions
    depends_on:
      - querier-1
      - querier-2

  minio:
    image: minio/minio:RELEASE.2025-02-28T09-55-16Z
    container_name: minio
    networks:
      - thanos
    ports:
      - "9000:9000"
      - "44575:44575"
    volumes:
      - ./data/minio/:/data
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=yayyayyay
    command: server --console-address "0.0.0.0:44575" /data

  store-gateway:
    image: thanos:latest
    container_name: store-gateway
    user: root
    networks:
      - thanos
    ports:
      - "19094:19094"
    volumes:
      - ./configs/bucket_storage.yml:/etc/thanos/minio-bucket.yaml
      - ./configs/jaeger.yml:/etc/tracing/jaeger.yaml
    command:
      - store
      - --objstore.config-file=/etc/thanos/minio-bucket.yaml
      - --http-address=0.0.0.0:19094
      - --grpc-address=0.0.0.0:19194
      - --tracing.config-file=/etc/tracing/jaeger.yaml
    depends_on:
      - minio

  thanos-compact:
    image: thanos:latest
    container_name: thanos-compact
    user: root
    networks:
      - thanos
    ports:
      - "19095:19095"
    volumes:
      - ./configs/bucket_storage.yml:/etc/thanos/minio-bucket.yaml
      - ./configs/jaeger.yml:/etc/tracing/jaeger.yaml
    command:
      - compact
      - --wait
      - --wait-interval=30s
      - --consistency-delay=0s
      - --objstore.config-file=/etc/thanos/minio-bucket.yaml
      - --http-address=0.0.0.0:19095
      - --tracing.config-file=/etc/tracing/jaeger.yaml
    depends_on:
      - minio

  thanos-query-frontend:
    image: thanos:latest
    container_name: thanos-query-frontend
    user: root
    networks:
      - thanos
    ports:
      - "29089:29089"
    command:
      - query-frontend
      - --http-address=0.0.0.0:29089
      - --query-frontend.downstream-url=http://querier-main:29090
      - --query-range.split-interval=5m
      - --query-frontend.vertical-shards=4
      - --enable-feature=promql-experimental-functions
    depends_on:
      - querier-main

  thanos-rule:
    image: thanos:latest
    container_name: thanos-rule
    user: root
    networks:
      - thanos
    ports:
      - "10902:10902"
    volumes:
      - ./configs/recording-rule.yml:/etc/prometheus/recording-rule.yml
    command:
      - rule
      - --eval-interval=1m
      - --rule-file=/etc/prometheus/recording-rule.yml
      - --alert.query-url=http://0.0.0.0:9090
      - --http-address=0.0.0.0:10902
      - --query=0.0.0.0:29091
      - --query=0.0.0.0:29092
      - --enable-feature=promql-experimental-functions
